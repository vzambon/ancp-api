map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name api.${APP_DOMAIN};
    server_tokens off;

    # Path to SSL certificate and private key
    ssl_certificate /etc/nginx/certs/${APP_DOMAIN}.pem;
    ssl_certificate_key /etc/nginx/certs/${APP_DOMAIN}.key;

    charset utf-8;

    access_log off;
    error_log  /var/log/nginx/api.${APP_DOMAIN}.log error;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://laravel:9051/api/;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name web.${APP_DOMAIN};
    server_tokens off;

    # Path to SSL certificate and private key
    ssl_certificate /etc/nginx/certs/${APP_DOMAIN}.pem;
    ssl_certificate_key /etc/nginx/certs/${APP_DOMAIN}.key;

    charset utf-8;

    access_log off;
    error_log  /var/log/nginx/${APP_DOMAIN}.log error;

    location /api/ {
        return 403;  # Return a Forbidden error
    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_pass http://laravel:9051/;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name ${APP_DOMAIN} admin.${APP_DOMAIN};
    server_tokens off;

    # Path to SSL certificate and private key
    ssl_certificate /etc/nginx/certs/${APP_DOMAIN}.pem;
    ssl_certificate_key /etc/nginx/certs/${APP_DOMAIN}.key;

    charset utf-8;

    access_log off;
    error_log  /var/log/nginx/spa.${APP_DOMAIN}.log error;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_pass http://quasar/;
        proxy_next_upstream error timeout http_500 http_502 http_504;
    }

    error_page 502 = @fallback_spa;
    error_page 500 = @fallback_spa;
    location @fallback_spa {
        add_header Content-Type text/plain;
        return 200 'The service is currently unavailable. Please try again later.';
    }
}
